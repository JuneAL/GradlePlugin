apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

group = Publish.GROUP_ID
version = Publish.VERSION


buildscript {
//    def versionConfig = new ConfigSlurper().parse(new File("./../version.properties").toURI().toURL())
//    ext {
//        kotlin_version = Dependencies.kotlin_stdlib
//        anko_version = Dependencies.anko
//        gradle_version = Dependencies.android_gradle_plugin
//    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath Dependecies.kotlin_gradle_plugin
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    google()
}

sourceSets {
    main.java.srcDirs += "src/main/java"
    main.kotlin.srcDirs += "src/main/kotlin"
}

task customClean(type: Delete) {
    delete "${project.projectDir}${File.separator}tmpNierDebug.apk",
            "${project.projectDir}${File.separator}tmpFgdRelease.apk"
}

clean.dependsOn(customClean)

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}


dependencies {
    implementation localGroovy()
    implementation gradleApi()
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.31"
    implementation "com.android.tools.build:apksig:3.4.1"
    implementation 'com.google.code.gson:gson:2.8.5'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = Publish.PACKER_HELPER_ARTIFACT_ID
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven { url = uri(Publish.LOCAL_PUBLISH_PATH) }
    }
}
