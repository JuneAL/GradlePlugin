import org.gradle.api.internal.HasConvention
import org.jetbrains.kotlin.gradle.plugin.KotlinSourceSet

//import org.jetbrains.kotlin.load.kotlin.JavaFlexibleTypeDeserializer.id


plugins {
    kotlin("jvm") version "1.2.60"
    `java-gradle-plugin`
    id("org.gradle.kotlin.kotlin-dsl") version "1.2.8"
    `groovy`
    `java-library`
    `maven-publish`
}

group = "com.nier.packer"
version = "1.0"

val kotlin_version = rootProject.extensions.extraProperties["kotlin_version"] as String

//gradlePlugin {
//    (plugins) {
//        "packer" {
//            id = "packer"
//            implementationClass = "com.nier.packer.PackerPlugin"
//        }
//    }
//}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        google()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
}

/**
 * 设置sourceSets
 */
/*
val projectConvention: HasConvention = java.sourceSets
        .getByName("main") as HasConvention

val projectConvention1: HasConvention = project.convention
        .getPluginByName<JavaPluginConvention>("java")
        .sourceSets
        .getByName("main") as HasConvention

projectConvention.convention
        .getPlugin<GroovySourceSet>()
        .groovy
        .setSrcDirs(files("src/main/groovy"))

projectConvention.convention
        .getPlugin<KotlinSourceSet>()
        .kotlin
        .setSrcDirs(files("src/main/java", "src/main/kotlin"))

java.sourceSets
        .getByName("main")
        .java
        .setSrcDirs(files("src/main/java"))
*/

sourceSets.main {
    withConvention(KotlinSourceSet::class) {
        kotlin.srcDirs("src/main/kotlin")
    }
}

sourceSets.main {
    withConvention(GroovySourceSet::class) {
        groovy.srcDirs("src/main/groovy")
    }
}

sourceSets.main {
    withConvention(JavaPluginConvention::class) {
        java.srcDirs("src/main/java")
    }
}

//sourceSets {
//    getByName("main").java.srcDirs("src/main/kotlin", "src/main/java")
//}


//sourceSets {
//    getByName("main").java.srcDirs("src/main/java")
//}

dependencies {
    implementation("com.android.tools.build:gradle:1.3.31")
    implementation("com.android.tools.build:apksig:1.3.31")
    implementation("com.nier.packer:helper:1.0")
//    compile "org.jetbrains.kotlin:kotlin-native-gradle-plugin:0.6.2"
    //    kotlin 标准库
//    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    kotlin 反射库
//    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
//    implementation(kotlin("stdlib", "1.2.31"))
//    api (project(":injector"))
    implementation(localGroovy())
    implementation(gradleApi())
    implementation(kotlin("stdlib", kotlin_version))
}

/*project.tasks.create("sourcesJar", Jar::class.java) {
    from(java.sourceSets.getByName("main").allSource)
    classifier = "sources"
}

project.tasks.create("javadocJar", Jar::class.java) {
    from(java.docsDir)
    classifier = "javadoc"
}*/


/*publishing {
    repositories {
        maven(url = uri("../publish"))
    }

//    publications {
//        register("mavenJava", MavenPublication::class) {
//            from(components["java"])
//            artifact(sourcesJar.get())
//        }
//    }
}*/
repositories {
    mavenCentral()
}