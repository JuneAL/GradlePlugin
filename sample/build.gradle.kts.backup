import org.gradle.internal.impldep.bsh.commands.dir
import org.gradle.internal.impldep.com.amazonaws.PredefinedClientConfigurations.defaultConfig

plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-android-extensions")
}
apply { from("packer.gradle") } //packer plugin
//apply {
//    plugin("packer")
//}
val kotlin_version = rootProject.extensions.extraProperties["kotlin_version"] as String

buildscript {
    repositories {
//        maven { url = uri("../publish") }//packer plugin
        google()
        jcenter()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:3.1.2")
        classpath(kotlin("gradle-plugin", rootProject.extensions.extraProperties["kotlin_version"] as String))
//        classpath("com.nier.packer:packer:1.0")//packer plugin
    }
}

//fun Project.packer(configure: PackerExtension.() -> Unit): Unit =
//        extensions.configure("packer", configure)


repositories {
    maven {
        url = uri("../publish")
    }
    google()
    jcenter()
}

android {
    compileSdkVersion(27)
    defaultConfig {
        applicationId = "com.nier.mypluginapplication"
        minSdkVersion(15)
        targetSdkVersion(21)
        versionCode = 3
        versionName = "3.0"
        testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        create("signv2") {
            storeFile = file("${rootProject.projectDir.path}${File.separator}plugin_app.jks")
            storePassword = "123456"
            keyAlias = "key0"
            keyPassword = "123456"
            isV2SigningEnabled = true
        }
    }
    buildTypes {
        getByName("debug") {
            signingConfig = signingConfigs.getByName("signv2")
        }
        getByName("release") {
            isMinifyEnabled = false
            signingConfig = signingConfigs.getByName("signv2")
            proguardFiles(getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro")
        }
    }

    flavorDimensions("mine")
    productFlavors {
        create("nier") {}

        create("fgd") {}
    }
    buildToolsVersion = "27.0.3"

    compileOptions {
        setSourceCompatibility(1.8)
        setTargetCompatibility(1.8)
    }
}


//packer {
//    id = 2333333
//    param = "Empty Param123"
//}


repositories {
    mavenCentral()
}

dependencies {
    implementation(fileTree(mapOf("dir" to "libs", "include" to listOf("*.jar"))))
    implementation("com.android.support:appcompat-v7:27.1.1")
    implementation("com.android.support.constraint:constraint-layout:1.1.2")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version")
    implementation("com.google.guava:guava:25.0-android")
//    implementation("com.nier.injector:injector-library:1.0")
//    implementation project(":packer")
//    implementation project(":injector")
//    api ("org.jetbrains.anko:anko-common:$anko_version")
}

//convention.getPlugin(com.nier.packer.PackerPluginConvention).apkName = "HaHa"
//convention.getPlugin(com.nier.packer.PackerPluginConvention).addChannels("Channel1","Channel2")